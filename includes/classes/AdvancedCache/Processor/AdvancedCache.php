<?php
/**
 * Processor for handling Requests.
 *
 * @package DarkMatter\AdvancedCache
 */

namespace DarkMatter\AdvancedCache\Processor;

use DarkMatter\AdvancedCache\Data\Request;

/**
 * Class Request
 *
 * @since 3.0.0
 */
class AdvancedCache {
	/**
	 * Request data.
	 *
	 * @var Request
	 */
	private $request = null;

	/**
	 * Constructor
	 */
	public function __construct() {
		$this->request = new Request( $_SERVER );

		if ( $this->request->is_cacheable() ) {
			$cache_entry = $this->request->cache_get();

			if ( ! empty( $cache_entry->headers ) ) {
				$headers = array_merge(
					$cache_entry->headers,
					[
						'X-DarkMatter-Cache' => 'HIT',
					]
				);

				$this->do_headers( $headers );
				die( $cache_entry->body );
			}

			ob_start( [ $this, 'do_output' ] );

//			add_filter( 'status_header', array( $this, 'status_header' ), 10, 2 );
//			add_filter( 'wp_redirect_status', array( $this, 'redirect_status' ), 10, 2 );
		}
	}

	/**
	 * @param array $headers Headers to be part of the request.
	 * @return void
	 */
	public function do_headers( $headers = [] ) {
		foreach ( $headers as $name => $value ) {
			header( "{$name}: {$value}", true );
		}
	}

	/**
	 * Handle the output from a dynamic request.
	 *
	 * @param string $output The output as generated by WordPress.
	 * @return string
	 */
	public function do_output( $output = '' ) {
		if ( ! is_string( $output ) ) {
			return $output;
		}

		if ( ! is_user_logged_in() ) {
			$this->request->cache( $output );
		}

		/**
		 * Find the closing `<body>` tag to output an HTML comment. This also ensures the response is HTML, and we do
		 * not accidentally break say a JSON response.
		 */
		$head_pos = strpos( $output, '</body>' );

		if ( defined( 'WP_DEBUG' ) && WP_DEBUG && false !== $head_pos ) {
			$debug = <<<HTML
<!--
=== DARK MATTER - DEBUG ===
-->
HTML;

			/**
			 * Insert the debug just before the closing <body> tag.
			 */
			$output = substr_replace( $output, $debug, $head_pos, 0 );
		}

		return $output;
	}
}
